name: Build & Publish Docker Image and Helm Chart

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  REPOSITORY: ghcr.io/FlytIT/utility/update-ghcr-secret
  VERSION: 0.1.${{ github.run_number }}

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          load: true
          tags: ${{ env.REPOSITORY }}/image:${{ env.VERSION }}

      - name: Log in to GHCR for Helm
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            helm registry login ${{ env.REGISTRY }} \
              --username ${{ github.actor }} \
              --password-stdin

      - name: Package Helm chart
        run: |
          helm package helm/${{ github.event.repository.name }} \
            --version ${{ env.VERSION }}

      - name: Push container image to GHCR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REPOSITORY }}/image:${{ env.VERSION }}

      - name: Push Helm chart to GHCR (versioned and latest)
        run: |
          CHART_NAME=$(helm show chart helm/${{ github.event.repository.name }} | grep ^name: | awk '{print $2}')
          CHART_PACKAGE="${CHART_NAME}-${VERSION}.tgz"

          echo "Pushing versioned chart: $CHART_PACKAGE"
          helm push "$CHART_PACKAGE" oci://${REPOSITORY}/chart

          echo "Tagging and pushing latest"
          cp "$CHART_PACKAGE" "${CHART_NAME}-latest.tgz"
          helm push "${CHART_NAME}-latest.tgz" oci://${REPOSITORY}/chart